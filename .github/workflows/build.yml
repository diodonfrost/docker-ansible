name: Build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 18 * * sun'

jobs:
  build:
    name: ${{ matrix.distribution.image }}-${{ matrix.distribution.version }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        distribution:
          - image: almalinux
            version: "8"
            platform: "linux/amd64,linux/arm64/v8"
          - image: almalinux
            version: "9"
            platform: "linux/amd64,linux/arm64/v8"
          - image: alpine
            version: "latest"
            platform: "linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8"
          - image: amazonlinux
            version: "2023"
            platform: "linux/amd64,linux/arm64/v8"
          - image: amazonlinux
            version: "2"
            platform: "linux/amd64,linux/arm64/v8"
          - image: archlinux
            version: "latest"
            platform: "linux/amd64"
          - image: centos
            version: "6"
            platform: "linux/amd64"
          - image: centos
            version: "7"
            platform: "linux/amd64"
          - image: centos
            version: "stream8"
            platform: "linux/amd64"
          - image: centos
            version: "stream9"
            platform: "linux/amd64"
          - image: clearlinux
            version: "latest"
            platform: "linux/amd64"
          - image: debian
            version: "10"
            platform: "linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8"
          - image: debian
            version: "11"
            platform: "linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8"
          - image: debian
            version: "12"
            platform: "linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8"
          - image: debian
            version: "testing"
            platform: "linux/amd64"
          - image: elementary
            version: "juno"
            platform: "linux/amd64"
          - image: fedora
            version: "26"
            platform: "linux/amd64,linux/arm64/v8"
          - image: fedora
            version: "27"
            platform: "linux/amd64,linux/arm64/v8"
          - image: fedora
            version: "28"
            platform: "linux/amd64,linux/arm64/v8"
          - image: fedora
            version: "29"
            platform: "linux/amd64,linux/arm64/v8"
          - image: fedora
            version: "30"
            platform: "linux/amd64,linux/arm64/v8"
          - image: fedora
            version: "31"
            platform: "linux/amd64,linux/arm64/v8"
          - image: fedora
            version: "32"
            platform: "linux/amd64,linux/arm64/v8"
          - image: fedora
            version: "33"
            platform: "linux/amd64"
          - image: fedora
            version: "34"
            platform: "linux/amd64"
          - image: fedora
            version: "35"
            platform: "linux/amd64"
          - image: fedora
            version: "36"
            platform: "linux/amd64"
          - image: fedora
            version: "37"
            platform: "linux/amd64"
          - image: fedora
            version: "38"
            platform: "linux/amd64"
          - image: fedora
            version: "39"
            platform: "linux/amd64"
          - image: opensuse
            version: "15"
            platform: "linux/amd64"
          - image: opensuse
            version: "15.1"
            platform: "linux/amd64"
          - image: opensuse
            version: "42.3"
            platform: "linux/amd64"
          - image: opensuse
            version: "leap"
            platform: "linux/amd64,linux/arm64/v8"
          - image: oraclelinux
            version: "6"
            platform: "linux/amd64"
          - image: oraclelinux
            version: "7"
            platform: "linux/amd64,linux/arm64/v8"
          - image: oraclelinux
            version: "8"
            platform: "linux/amd64,linux/arm64/v8"
          - image: oraclelinux
            version: "9"
            platform: "linux/amd64,linux/arm64/v8"
          - image: rockylinux
            version: "8"
            platform: "linux/amd64"
          - image: rockylinux
            version: "9"
            platform: "linux/amd64"
          - image: ubi-minimal
            version: "8"
            platform: "linux/amd64,linux/arm64/v8"
          - image: ubi-minimal
            version: "9"
            platform: "linux/amd64,linux/arm64/v8"
          - image: ubuntu
            version: "14.04"
            platform: "linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8"
          - image: ubuntu
            version: "16.04"
            platform: "linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8"
          - image: ubuntu
            version: "18.04"
            platform: "linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8"
          - image: ubuntu
            version: "20.04"
            platform: "linux/amd64,linux/arm/v7,linux/arm64/v8"
          - image: ubuntu
            version: "22.04"
            platform: "linux/amd64,linux/arm/v7,linux/arm64/v8"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Inspec
        run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec -v 5.21.29

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: |
          docker build \
            --no-cache \
            --rm \
            --file=${{ matrix.distribution.image }}-ansible/Dockerfile.${{ matrix.distribution.image }}-${{ matrix.distribution.version }} \
            --tag=diodonfrost/ansible-${{ matrix.distribution.image }}:${{ matrix.distribution.version }} \
            ${{ matrix.distribution.image }}-ansible

      - name: Test Docker images
        run: |
          container_id=$(mktemp)
          sudo docker run \
            --detach \
            --privileged \
            --cgroupns=host \
            -v /sys/fs/cgroup:/sys/fs/cgroup:rw \
            -v /var/lib/containerd \
            diodonfrost/ansible-${{ matrix.distribution.image }}:${{ matrix.distribution.version }} > "${container_id}"

          inspec exec tests/inspec --chef-license accept-silent -t docker://$(cat ${container_id})

      - name: Build Docker images on all platforms
        run: |
          docker buildx build \
            --platform ${{ matrix.distribution.platform }} \
            --file=${{ matrix.distribution.image }}-ansible/Dockerfile.${{ matrix.distribution.image }}-${{ matrix.distribution.version }} \
            --tag=diodonfrost/ansible-${{ matrix.distribution.image }}:${{ matrix.distribution.version }} \
            ${{ matrix.distribution.image }}-ansible
